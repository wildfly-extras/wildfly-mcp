<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
      <groupId>org.jboss</groupId>
      <artifactId>jboss-parent</artifactId>
      <version>49</version>
    </parent>
    <groupId>org.wildfly.mcp</groupId>
    <artifactId>wildfly-mcp-server-parent</artifactId>
    <version>1.0.0.Alpha6-SNAPSHOT</version>
    <packaging>pom</packaging>
    <description>WildFly MCP server</description>
    <name>WildFly MCP server</name>
    <url>https://github.com/wildfly-extras/wildfly-mcp</url>
    <licenses>
      <license>
        <name>Apache License 2.0</name>
        <url>http://repository.jboss.org/licenses/apache-2.0.txt</url>
        <distribution>repo</distribution>
      </license>
    </licenses>
    <developers>
      <developer>
        <id>jdenise</id>
        <name>Jean-Francois Denise</name>
        <organization>Red Hat</organization>
      </developer>
    </developers>
    <properties>
        <compiler-plugin.version>3.13.0</compiler-plugin.version>
        <maven.compiler.release>21</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
        <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>
        
        <org.apache.httpcomponents.version>4.5.9</org.apache.httpcomponents.version>
        <org.jboss.remotingjmx.version>3.1.0.Final</org.jboss.remotingjmx.version>
        <org.wildfly.core.version>29.0.0.Beta6</org.wildfly.core.version>
        <org.wildfly.glow.version>1.4.1.Final</org.wildfly.glow.version>
        <quarkus.platform.version>3.24.1</quarkus.platform.version>
        <quarkus.mcp.version>1.3.1</quarkus.mcp.version>
        
        <skipITs>true</skipITs>
        <jandex-plugin.version>3.2.7</jandex-plugin.version>
        <surefire-plugin.version>3.5.0</surefire-plugin.version>
        
        <version.gpg.plugin>3.2.8</version.gpg.plugin>
        <version.nxrm3.plugin>1.0.7</version.nxrm3.plugin>
        <!-- maven-gpg-plugin -->
        <!-- set this to "error" to require a GPG agent-->
        <gpg.pinEntryMode>loopback</gpg.pinEntryMode>
        <!-- Nexus deployment settings -->
        <nexus.serverId>jboss</nexus.serverId>
        <nexus.repo.name>wildfly-extras-staging</nexus.repo.name>
        <nexus.repo.url>https://repository.jboss.org/nexus</nexus.repo.url>
        <nexus.destination.repo.name>wildfly-extras</nexus.destination.repo.name>
        <nexus.staging.tag>wildfly-mcp-server-${project.version}</nexus.staging.tag>
        <wildfly.repo.scm.connection>git@github.com:wildfly-extras/wildfly-mcp.git</wildfly.repo.scm.connection>
        <wildfly.repo.scm.url>https://github.com/wildfly-extras/wildfly-mcp</wildfly.repo.scm.url>
    </properties>
    <scm>
      <connection>scm:git:${wildfly.repo.scm.connection}</connection>
      <developerConnection>scm:git:${wildfly.repo.scm.connection}</developerConnection>
      <url>${wildfly.repo.scm.url}</url>
      <tag>HEAD</tag>
    </scm>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>${quarkus.platform.group-id}</groupId>
                <artifactId>${quarkus.platform.artifact-id}</artifactId>
                <version>${quarkus.platform.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>wildfly-mcp-server-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${org.apache.httpcomponents.version}</version>
            </dependency>
            <dependency>
                <groupId>io.quarkiverse.mcp</groupId>
                <artifactId>quarkus-mcp-server-core</artifactId>
                <version>${quarkus.mcp.version}</version>
            </dependency>
            <dependency>
                <groupId>io.quarkiverse.mcp</groupId>
                <artifactId>quarkus-mcp-server-stdio</artifactId>
                <version>${quarkus.mcp.version}</version>
            </dependency>
            <dependency>
                <groupId>io.quarkiverse.mcp</groupId>
                <artifactId>quarkus-mcp-server-sse</artifactId>
                <version>${quarkus.mcp.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.remotingjmx</groupId>
                <artifactId>remoting-jmx</artifactId>
                <version>${org.jboss.remotingjmx.version}</version>
            </dependency>
            <dependency>
                <groupId>org.wildfly.core</groupId>
                <artifactId>wildfly-cli</artifactId>
                <version>${org.wildfly.core.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.jboss.logging</groupId>
                        <artifactId>jboss-logging</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.jboss.logmanager</groupId>
                        <artifactId>jboss-logmanager</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
              <groupId>org.wildfly.glow</groupId>
              <artifactId>wildfly-glow</artifactId>
              <version>${org.wildfly.glow.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <modules>
        <module>common</module>
        <module>sse</module>
        <module>stdio</module>
        <module>testsuite</module>
    </modules>
        
    <build>
      <pluginManagement>
        <plugins>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nxrm3-maven-plugin</artifactId>
            <version>${version.nxrm3.plugin}</version>
            <configuration>
              <serverId>${nexus.serverId}</serverId>
              <nexusUrl>${nexus.repo.url}</nexusUrl>
              <repository>${nexus.repo.name}</repository>
            </configuration>
          </plugin>
        </plugins>
      </pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <executions>
            <execution>
              <id>attach-javadocs</id>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </build>
    <profiles>
      <!-- Temporarily override the jboss-parent jboss-release profile
      to add configuration related to Nexus 3 deployment. These
      are expected to come in a later jboss-parent release -->
      <!-- TODO remove this content when it is included in jboss-parent -->
      <profile>
        <id>jboss-release</id>
        <build>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-deploy-plugin</artifactId>
              <executions>
                <execution>
                  <id>default-deploy</id>
                  <phase>none</phase>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <groupId>org.sonatype.plugins</groupId>
              <artifactId>nxrm3-maven-plugin</artifactId>
              <extensions>true</extensions>
              <executions>
                <execution>
                  <id>nexus-deploy</id>
                  <phase>deploy</phase>
                  <goals>
                    <goal>deploy</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-gpg-plugin</artifactId>
              <configuration>
                <useAgent>true</useAgent>
                <gpgArguments>
                  <arg>--pinentry-mode</arg>
                  <arg>${gpg.pinEntryMode}</arg>
                </gpgArguments>
              </configuration>
              <executions>
                <execution>
                  <id>gpg-sign</id>
                  <goals>
                    <goal>sign</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </build>
      </profile>
      <!-- Use this profile in combination with 'jboss-release' to use
      the nxrm3-maven-plugin's 'staging-deploy' goal instead of its
      'deploy' goal. Once the staged deployment is valdated, the
      person or script doing the release  would move on to use
      its 'staging-move' goal via a call to
      'mvn nxrm3:staging-move -Pjboss-staging-move' -->
      <!-- TODO remove this content when it is included in jboss-parent -->
      <profile>
        <id>jboss-staging-deploy</id>
        <build>
          <plugins>
            <plugin>
              <groupId>org.sonatype.plugins</groupId>
              <artifactId>nxrm3-maven-plugin</artifactId>
              <executions>
                <!-- Disable the jboss-release profile's 'deploy' goal execution -->
                <execution>
                  <id>nexus-deploy</id>
                  <phase>none</phase>
                </execution>
                <execution>
                  <id>nexus-staging.deploy</id>
                  <phase>deploy</phase>
                  <goals>
                    <goal>staging-deploy</goal>
                  </goals>
                  <configuration>
                    <tag>${nexus.staging.tag}</tag>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </build>
      </profile>
      <!-- Used in release workflows that use the 'jboss-staging-deploy' profile,
      this profile configures the nxrm3-maven-plugin to support command
      line execution of its 'staging-move' goal. -->
      <!-- TODO remove this content when it is included in jboss-parent -->
      <profile>
        <id>jboss-staging-move</id>
        <build>
          <plugins>
            <plugin>
              <groupId>org.sonatype.plugins</groupId>
              <artifactId>nxrm3-maven-plugin</artifactId>
              <configuration>
                <destinationRepository>${nexus.destination.repo.name}</destinationRepository>
                <tag>${nexus.staging.tag}</tag>
              </configuration>
            </plugin>
          </plugins>
        </build>
      </profile>
      <!-- Used in release workflows that use the 'jboss-staging-deploy' profile,
      this profile configures the nxrm3-maven-plugin to support command
      line execution of its 'staging-delete' goal. -->
      <!-- TODO remove this content when it is included in jboss-parent -->
      <profile>
        <id>jboss-staging-delete</id>
        <build>
          <plugins>
            <plugin>
              <groupId>org.sonatype.plugins</groupId>
              <artifactId>nxrm3-maven-plugin</artifactId>
              <configuration>
                <tag>${nexus.staging.tag}</tag>
              </configuration>
            </plugin>
          </plugins>
        </build>
      </profile>
    </profiles>
</project>
